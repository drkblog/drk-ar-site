grammar SiDiLa
  body <- (@ws (turn / move / back / shoot / branch / loop) @ws @nl)*
  loop <- 'mientras' @ws condition @ws @'(' @nl body @nl @ws @')' %makeLoop
  branch <- 'si' @ws condition @ws @'(' @nl body @nl @ws @')' (@ws 'si no' @ws @'(' @nl body @nl @ws @')')? %makeBranch
  condition <- (ahead_condition / in_game_condition)
  in_game_condition <- not @ws 'haya salido' %makeInGameCondition
  ahead_condition <- not @ws 'hay' @ws sprite @ws look_up_direction %makeLookAheadCondition
  not <- 'no'?
  sprite <- ('pared' / 'algo' / 'zombie' / 'espacio' / 'salida')
  look_up_direction <- ('adelante' / 'a la izquierda' / 'a la derecha')
  move <- 'avanzar' %makeMove
  back <- 'retroceder' %makeBack
  shoot <- 'disparar' %makeShoot
  turn <- 'girar' @ws @'hacia' @ws direction %makeTurn
  direction <- ('la izquierda' / 'la derecha' / 'atras')
  ws <- ([ \t]+)*
  nl <- ([\r\n]+)*